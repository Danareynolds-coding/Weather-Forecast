 loadingSpinner.style.display = 'block';
        fetch(url)
        .then(response => {
            if (!response.ok) {
                throw new Error('Weather data not available');
            }
            return response.json();
        })
        .then(data => {
            return new Promise(resolve => {
                setTimeout(() => resolve(data), 2000);
            });
        })
        .then(data => {
             loadingSpinner.style.display = 'none'; 
            const forecastData = data.properties.periods;     fetchWeatherAndConvert(forecastUrl);
          
                   })
        .catch(error => {
            loadingSpinner.style.display = 'none';
            console.error("Error fetching weather data:", error);
            document.getElementById("celcius-box").innerHTML = "<p>Error loading weather data.</p>";
        });
    }

    function displayCelcius(data) {
        const celciusBox = document.getElementById("celcius-box");
        celciusBox.innerHTML = "";
        const dailyForecast = {};
        data.forEach(period => {
            const temperatureData =data.properties.temperature.values;
            const celciusTemperatures = temperature.map(temp => {
                if (temp.uom === "째F"){
                    return fahrenheitToCelcius(temp.value);
                }
            })
            const date = new Date(period.startTime).toDateString();
            if (!dailyForecast[date]) {
                dailyForecast[date] = { minTemp: Infinity, maxTemp: -Infinity, periods: [] };
            }
            dailyForecast[date].minTemp = Math.min(dailyForecast[date].minTemp, period.temperature);
            dailyForecast[date].maxTemp = Math.max(dailyForecast[date].maxTemp, period.temperature);
            dailyForecast[date].periods.push(period);
        });

        for (const date in dailyForecast) {
            const dayData = dailyForecast[date];

            const celciusElement = document.createElement("div");
            celciusElement.innerHTML = `
                <h2 class="col-12">${date}</h2>
                <p>Forecast: ${shortForecast}</p>
                <p>Temperature: ${temperature}째C</p>
                <p>Min Temperature: ${dayData.minTemp}째C</p>
                <p>Max Temperature: ${dayData.maxTemp}째C</p>
            `;
            celciusBox.appendChild(celciusElement);
        }
}
function fahrenheitToCelsius(fahrenheit) {
  return (fahrenheit - 32) * 5 / 9;
}        
        
    