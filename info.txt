async function getMinMaxTemperatures(latitude, longitude) {
    try {
        // Step 1: Get gridpoint information
        const pointsUrl = `https://api.weather.gov/points/${latitude},${longitude}`;
        const pointsResponse = await fetch(pointsUrl);
        const pointsData = await pointsResponse.json();

        if (!pointsData || !pointsData.properties || !pointsData.properties.forecast) {
            console.error("Could not retrieve gridpoint information or forecast URL.");
            return;
        }

        const forecastUrl = pointsData.properties.forecast;

        // Step 2: Fetch forecast data
        const forecastResponse = await fetch(forecastUrl);
        const forecastData = await forecastResponse.json();

        if (!forecastData || !forecastData.properties || !forecastData.properties.periods) {
            console.error("Could not retrieve forecast data.");
            return;
        }

        const periods = forecastData.properties.periods;
        const dailyTemperatures = {};

        periods.forEach(period => {
            const date = new Date(period.startTime).toISOString().split('T')[0];
            const temperature = period.temperature;

            if (!dailyTemperatures[date]) {
                dailyTemperatures[date] = { minTemp: Infinity, maxTemp: -Infinity };
            }

            // The 'temperature' property in weather.gov API periods represents the forecast temperature for that period.
            // For daily min/max, we iterate through periods and update the min/max for each day.
            dailyTemperatures[date].minTemp = Math.min(dailyTemperatures[date].minTemp, temperature);
            dailyTemperatures[date].maxTemp = Math.max(dailyTemperatures[date].maxTemp, temperature);
        });

        console.log("Daily Minimum and Maximum Temperatures:");
        for (const date in dailyTemperatures) {
            console.log(`${date}: Min Temp = ${dailyTemperatures[date].minTemp}°F, Max Temp = ${dailyTemperatures[date].maxTemp}°F`);
        }

    } catch (error) {
        console.error("Error fetching weather data:", error);
    }
}

// Example usage for Washington D.C.
getMinMaxTemperatures(38.8894, -77.0352);